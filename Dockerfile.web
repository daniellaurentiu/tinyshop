FROM php:8.3-fpm

# Set working directory
WORKDIR /var/www

ARG user=www
ARG group=www

#RUN apt-get update && apt-get install -y procps

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cron \
    libzip-dev \
    libonig-dev \
    libxml2-dev \
    libpng-dev \
    libffi-dev \
    libxslt-dev \
    libmagickwand-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    locales \
    zip \
    jq \
    jpegoptim optipng pngquant gifsicle \
    vim \
    unzip \
    git \
    curl \
    graphviz \
    sudo \
    libpq-dev \
    libunwind-dev \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev

RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y nodejs \
    npm

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

ENV PHP_OPCACHE_VALIDATE_TIMESTAMPS="0" \
    PHP_OPCACHE_MAX_ACCELERATED_FILES="10000" \
    PHP_OPCACHE_MEMORY_CONSUMPTION="192" \
    PHP_OPCACHE_MAX_WASTED_PERCENTAGE="10"

# Install extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg
RUN pecl install imagick && docker-php-ext-enable imagick
RUN pecl install igbinary && docker-php-ext-enable igbinary
RUN pecl install redis && docker-php-ext-enable redis
RUN docker-php-ext-install pdo pdo_mysql
RUN docker-php-ext-install ffi xsl xml zip
RUN docker-php-ext-install zip pcntl gd exif
RUN docker-php-ext-install opcache
RUN docker-php-ext-install exif
RUN docker-php-ext-install pcntl
RUN docker-php-ext-install gd
RUN docker-php-ext-install pdo
RUN docker-php-ext-install pdo_mysql
RUN docker-php-ext-install mysqli
RUN docker-php-ext-install mbstring
RUN docker-php-ext-install dom
RUN docker-php-ext-install ctype
RUN docker-php-ext-install bcmath
RUN docker-php-ext-install bz2
RUN docker-php-ext-install calendar
RUN docker-php-ext-install dba
RUN docker-php-ext-install intl
RUN docker-php-ext-configure intl
RUN docker-php-ext-enable intl
RUN docker-php-ext-install soap
RUN docker-php-ext-install sockets
RUN docker-php-ext-install sysvmsg
RUN docker-php-ext-install sysvsem
RUN docker-php-ext-install sysvshm
RUN pecl install channel://pecl.php.net/xmlrpc-1.0.0RC3
RUN docker-php-ext-enable xmlrpc
RUN docker-php-ext-configure gd --with-freetype --with-jpeg
RUN docker-php-ext-install -j$(nproc) gd

# Creat folder for ES data
RUN mkdir -p /usr/share/elasticsearch/data

# Define mountable directories
#VOLUME ["/etc/supervisor/conf.d"]
VOLUME ["/var/run"]
VOLUME ["/var/www/docker"]
VOLUME ["/var/www/bin/linux/"]
VOLUME ["/usr/share/elasticsearch/data"]

# Copy Zend opcache.ini
COPY docker/php/opcache.ini /usr/local/etc/php/conf.d/opcache.ini

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version=2.0.9

# Add user for group
RUN groupadd -g 1000 $user
RUN useradd -u 1000 -ms /bin/bash -g $user $group

# Copy existing application directory contents
COPY . /var/www

# Set user and group permissions for ES folder data
RUN chown $user:www /usr/share/elasticsearch/data
RUN chown -R $user /usr/share/elasticsearch/data

# Copy existing application directory permissions
#RUN chown $user:www /var/run/user/ccdaemon

# Copy and make init.sh executable
RUN chown -R $user /var/www/docker

# Ensure process files are copied
#COPY docker/process /var/www/docker/process

# Set exec permissions on process files
#RUN chmod a+rwx /var/www/docker/process -R

# Switch user
USER $user

# Expose port 9000 and start php-fpm server
EXPOSE 9000
