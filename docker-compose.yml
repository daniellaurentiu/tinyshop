version: "3.9"

networks:
    tiny_shop_network:
        driver: bridge

volumes:
    mysql_data:
        driver: local
    redis_data:
        driver: local
    elasticsearch_data:
        driver: local
    minio_data:
        driver: local
    grafana_data:
        driver: local
    metricbeat-data:
        driver: local

services:
    app:
        build:
            context: ./
            dockerfile: Dockerfile.web
        image: tiny_shop_image
        container_name: tiny_shop
        restart: always
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
            - ./docker/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
        networks:
            - tiny_shop_network

    nginx:
        build:
            context: ./
            dockerfile: Dockerfile.nginx
        image: tiny_shop_nginx_image
        container_name: tiny_shop_nginx
        restart: always
        tty: true
        ports:
            - 8084:80
            - 443:443
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - tiny_shop_network
        extra_hosts:
            - 'tiny.shop:127.0.0.1'

    mysql:
        image: mysql
        container_name: tiny_shopdb
        restart: always
        tty: true
        ports:
            - "3306:3306"
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_DATABASE: scs_master
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_USER: homestead
            MYSQL_PASSWORD: secret
        volumes:
            - ./docker/mysql/init:/docker-entrypoint-initdb.d
            - mysql_data:/var/lib/mysql
        networks:
            - tiny_shop_network

    tiny_shop_elasticsearch:
        image: elasticsearch:7.9.0
        container_name: tiny_shop_elasticsearch
        restart: always
        tty: true
        ports:
            - 9200:9200
        environment:
            - discovery.type=single-node
            - network.bind_host=0.0.0.0
            - network.host=0.0.0.0
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - "indices.memory.index_buffer_size=10%"
            - "thread_pool.write.queue_size=1000"
        cap_add:
            - IPC_LOCK
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 65536
                hard: 65536
        volumes:
            - elasticsearch_data:/var/lib/elasticsearch/data
        networks:
            - tiny_shop_network

    redis:
        image: redis:7.2-rc1
        container_name: tiny_shop_redis
        restart: always
        tty: true
        volumes:
            - redis_data:/data
        ports:
            - "6379:6379"
        networks:
            - tiny_shop_network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: tiny_shop_phpmyadmin
        restart: always
        tty: true
        ports:
            - "8081:80"
        environment:
            PMA_HOST: tiny_shopdb
            PMA_ABSOLUTE_URI: http://db.test
            MYSQL_ROOT_PASSWORD: secret
        networks:
            - tiny_shop_network
        extra_hosts:
            - 'db.test:127.0.0.1'

    minio:
        image: minio/minio
        container_name: tiny_shop-minio
        restart: always
        tty: true
        ports:
            - "9600:9600"
            - "9001:9001"
        volumes:
            - minio_data:/data
        environment:
            MINIO_ROOT_USER : homestead
            MINIO_ROOT_PASSWORD : secretkey
        networks:
            - tiny_shop_network
        command: server /data --address ":9600" --console-address ":9001"

    createbuckets:
        image: minio/mc
        depends_on:
            - minio
        restart: on-failure
        environment:
            MINIO_ROOT_USER: homestead
            MINIO_ROOT_PASSWORD: secretkey
        entrypoint: >
            /bin/sh -c "
            until (/usr/bin/mc alias set buckets http://tiny_shop-minio:9600 homestead secretkey) do echo 'Working...' && sleep 1; done;
            /usr/bin/mc mb buckets/s3-storage;
            /usr/bin/mc mb buckets/scs-testing;
            /usr/bin/mc mb buckets/ccv1-no1;
            /usr/bin/mc mb buckets/ccv1-no2;
            /usr/bin/mc mb buckets/ccv1-no3;
            /usr/bin/mc policy set download buckets/s3-storage;
            /usr/bin/mc policy set download buckets/scs-testing;
            /usr/bin/mc policy set download buckets/ccv1-no1;
            /usr/bin/mc policy set download buckets/ccv1-no2;
            /usr/bin/mc policy set download buckets/ccv1-no3;
            exit 0;
            "
        networks:
            - tiny_shop_network

    mailhog:
        image: mailhog/mailhog
        container_name: tiny_shop-mailhog
        restart: always
        tty: true
        ports:
            - 1025:1025 # smtp server
            - 8025:8025 # web ui
        networks:
            - tiny_shop_network
